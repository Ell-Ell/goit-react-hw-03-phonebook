{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/ContactItem/ContactItem.js","components/Storage/Storage.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","form","this","label","htmlFor","type","id","onChange","pattern","title","input","required","btnSubmit","Component","Filter","span","ContactList","contacts","ListItem","onDeleteContact","list","map","ContactItem","item","button","onClick","Storage","nameOfStorage","_ls","localStorage","_nameOfStorage","_storage","JSON","parse","getItem","setItem","stringify","clear","push","_updateStorage","prop","filter","element","App","deleteContact","contactId","_storageContacts","remove","getAll","formSubmitHandler","newContact","find","elem","toLowerCase","alert","contact","set","changeFilter","getVisibleContacts","normalizedFilter","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb4fc0d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__4Nebg\",\"label\":\"ContactForm_label__ByP8v\",\"input\":\"ContactForm_input__2NCos\",\"btnSubmit\":\"ContactForm_btnSubmit__2Elv2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2Werd\",\"name\":\"ContactItem_name__3wSNE\",\"number\":\"ContactItem_number__3nFJw\",\"button\":\"ContactItem_button__ghOUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1g1fX\",\"input\":\"Filter_input__1inuL\",\"span\":\"Filter_span__3hHO4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1s-mR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Tm35\"};","import s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label className={s.label} htmlFor={this.nameInputId}>\r\n            Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id={this.nameInputId}\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            className={s.input}\r\n            required\r\n          />\r\n\r\n          <label className={s.label} htmlFor={this.numberInputId}>\r\n            Number\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            id={this.numberInputId}\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            className={s.input}\r\n            required\r\n          />\r\n\r\n          <button type=\"submit\" className={s.btnSubmit}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.span}>Find contacts by name</span>\r\n      <input\r\n        type=\"text\"\r\n        className={s.input}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, ListItem, onDeleteContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ListItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDeleteContact={onDeleteContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\r\n  <li key={id} className={s.item}>\r\n    <p className={s.name}>{name}</p>\r\n    <p className={s.number}>{number}</p>\r\n    <button\r\n      type=\"button\"\r\n      className={s.button}\r\n      onClick={() => {\r\n        onDeleteContact(id);\r\n      }}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","class Storage {\r\n  constructor(nameOfStorage) {\r\n    this._ls = localStorage;\r\n    this._nameOfStorage = nameOfStorage;\r\n    this._storage = JSON.parse(this._ls.getItem(nameOfStorage));\r\n\r\n    if (!this._storage) {\r\n      this._storage = [];\r\n    }\r\n  }\r\n  _updateStorage() {\r\n    this._ls.setItem(this._nameOfStorage, JSON.stringify(this._storage));\r\n  }\r\n  _resetStorage() {\r\n    const data = [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ];\r\n    this._ls.clear();\r\n    this._ls.setItem(this._nameOfStorage, JSON.stringify(data));\r\n  }\r\n  set(value) {\r\n    this._storage.push(value);\r\n    this._updateStorage();\r\n  }\r\n  get(prop, value) {\r\n    return this._storage.filter(element => element[prop] === value);\r\n  }\r\n  remove(prop, value) {\r\n    this._storage = this._storage.filter(element => element[prop] !== value);\r\n    this._updateStorage();\r\n  }\r\n  getAll() {\r\n    return this._storage;\r\n  }\r\n}\r\n\r\nexport default Storage;\r\n","import React, { Component } from 'react';\r\n\r\nimport Container from './components/Container';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\nimport ContactItem from './components/ContactItem';\r\nimport Storage from './components/Storage';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this._storageContacts = new Storage('contacts');\r\n    this.state = {\r\n      contacts: this._storageContacts.getAll(),\r\n      filter: '',\r\n    };\r\n  }\r\n\r\n  deleteContact = contactId => {\r\n    this._storageContacts.remove('id', contactId);\r\n    this.setState(() => ({\r\n      contacts: this._storageContacts.getAll(),\r\n    }));\r\n\r\n    // this.setState(prevState => ({\r\n    //   contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    // }));\r\n  };\r\n\r\n  formSubmitHandler = newContact => {\r\n    // console.log(newContact);\r\n\r\n    const { contacts } = this.state;\r\n    const contactExist = contacts.find(\r\n      elem => newContact.name.toLowerCase() === elem.name.toLowerCase(),\r\n    );\r\n\r\n    if (contactExist) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n    } else {\r\n      const contact = {\r\n        id: uuidv4(),\r\n        name: newContact.name,\r\n        number: newContact.number,\r\n      };\r\n\r\n      // this.setState(prevState => ({\r\n      //   contacts: [contact, ...prevState.contacts],\r\n      // }));\r\n      this._storageContacts.set(contact);\r\n      this.setState(() => ({\r\n        contacts: this._storageContacts.getAll(),\r\n      }));\r\n    }\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <Container>\r\n            <h1 className=\"title\">Phonebook</h1>\r\n            <ContactForm onSubmit={this.formSubmitHandler} />\r\n\r\n            <h2 className=\"title\">Contacts</h2>\r\n            <Filter value={filter} onChange={this.changeFilter} />\r\n            <ContactList\r\n              ListItem={ContactItem}\r\n              contacts={filteredContacts}\r\n              onDeleteContact={this.deleteContact}\r\n            />\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}